# -*- coding: utf-8 -*-
"""Rohan_YouGov.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Fnd8-oLsPCaVA84S3lhNpjdj6RY6mhfH
"""

import requests
import json
data_lst = []
for i in range(1,10):
  response = requests.get(f"https://swapi.dev/api/people/?page={i}")
  data = response.text
  data = json.loads(data)
  # print(data)
  data_lst.append(data['results'])
films = {}
heights = {}
species = {}
for i in data_lst:
  for j in i:
    # getting films
    # print(j["name"],j["films"])
    films[j["name"]] = len(j["films"])
    # getting heights
    # print(j["name"],j["height"])
  
    # heights[j["name"]] = [int(j["height"]) if j["height"] != "unknown" else None][0]
    heights[j["name"]] = int(j["height"]) if j["height"] != "unknown" else None
    #getting species
    # print(j["name"],j["species"])
    species[j["name"]] = j["species"]
    if len(j["species"]) == 0:
      # print("Human")
      species[j["name"]] = "Human"
    else:
      response = requests.get(j["species"][0])
      data2 = response.text
      data2 = json.loads(data2)
      # print(data2["name"])
      species[j["name"]] = data2["name"]
    # print()
    # for k,v in j.items():
    #   print(k,v)
    #   print()
      # if k=="name":
      #   print(j[k])
        # names.append(j[k])
      # if k=="films":
        # print(j[k])
        # print(j['name'],j['films'])
        # names[j["name"]] = names[j["films"]]
names_lst = films.keys()
films_lst = films.values()
heights_lst = heights.values()
species_lst = species.values()

# from collections import Counter
# films = Counter(films)
# heights = Counter(heights)
# species = 
# result1 = films.most_common(10)
# result2 = heights.most_common(10)
# print(result1)
# print("#"*10)
# print(result2)

import pandas as pd
df = pd.DataFrame({
    "Name":names_lst, 
    "Height": heights_lst,
    "Appearances": films_lst,
    "Species": species_lst})

df = df.sort_values(by=['Appearances'], ascending=False)
df = df[:10]

df = df.sort_values(by=['Height'], ascending = False)
df.reset_index(inplace =True)
df = df.drop("index", axis =1)
df
# df.to_csv("result.csv")

# heights_lst

